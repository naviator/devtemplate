---
# Source: redpanda/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redpanda
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-3.0.10
spec:
  selector:
    matchLabels: 
      app.kubernetes.io/name: redpanda
      app.kubernetes.io/instance: "redpanda"
      app.kubernetes.io/component: redpanda-statefulset
  serviceName: redpanda
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: "Parallel"
  template:
    metadata:
      labels: 
        app.kubernetes.io/name: redpanda
        app.kubernetes.io/instance: "redpanda"
        app.kubernetes.io/component: redpanda-statefulset
        redpanda.com/poddisruptionbudget: redpanda
      annotations:
        checksum/config: 47803d8102de5ddd457905df0bf6aef73ff8e7e0363b495645a1eb9d1a91c0fe
    spec:
      securityContext: 
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      initContainers:
        - name: tuning
          image: vectorized/redpanda:v23.1.6
          command:
            - bash
            - -c
          args:
            - |
              rpk redpanda tune all
          securityContext:
            capabilities:
              add: ["CAP_SYS_RESOURCE"]
            privileged: true
            runAsUser: 0
            runAsGroup: 0
          volumeMounts:
            - name: redpanda
              mountPath: /etc/redpanda
        - name: redpanda-configurator
          image: vectorized/redpanda:v23.1.6
          command: ["/bin/bash", "-c"]
          env:
            - name: SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ADVERTISED_KAFKA_ADDRESSES
              value: '{"address":"$(SERVICE_NAME).redpanda.redpanda.svc.cluster.local.","name":"internal","port":9093};{"address":"$(SERVICE_NAME)","name":"default","port":31092}'
            - name: ADVERTISED_HTTP_ADDRESSES
              value: '{"address":"$(SERVICE_NAME).redpanda.redpanda.svc.cluster.local.","name":"internal","port":8082};{"address":"$(SERVICE_NAME)","name":"default","port":30082}'
            - name: KUBERNETES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          args:
            - |
              set -xe
              CONFIG=/etc/redpanda/redpanda.yaml
              POD_ORDINAL=${SERVICE_NAME##*-}

              # Setup config files
              cp /tmp/base-config/redpanda.yaml "${CONFIG}"
              cp /tmp/base-config/bootstrap.yaml /etc/redpanda/.bootstrap.yaml

              NODE_INDEX=`expr $POD_ORDINAL + 1`

              LISTENER_INDEX=1
              LISTENER=`echo $ADVERTISED_KAFKA_ADDRESSES | cut -d ' ' -f $NODE_INDEX | cut -d ';' -f $LISTENER_INDEX`
              until [ "$LISTENER" == "" ]; do
                rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[$(($LISTENER_INDEX-1))] "$LISTENER"
                let "LISTENER_INDEX+=1"
                LISTENER=`echo $ADVERTISED_KAFKA_ADDRESSES | cut -d ' ' -f $NODE_INDEX | cut -d ';' -f $LISTENER_INDEX`
              done

              LISTENER_INDEX=1
              LISTENER=`echo $ADVERTISED_HTTP_ADDRESSES | cut -d ' ' -f $NODE_INDEX | cut -d ';' -f $LISTENER_INDEX`
              until [ "$LISTENER" == "" ]; do
                rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[$(($LISTENER_INDEX-1))] "$LISTENER"
                let "LISTENER_INDEX+=1"
                LISTENER=`echo $ADVERTISED_HTTP_ADDRESSES | cut -d ' ' -f $NODE_INDEX | cut -d ';' -f $LISTENER_INDEX`
              done
          securityContext: 
            runAsUser: 101
            runAsGroup: 101
          volumeMounts:
            - name: redpanda
              mountPath: /tmp/base-config
            - name: config
              mountPath: /etc/redpanda
      containers:
        - name: redpanda
          image: vectorized/redpanda:v23.1.6
          env:
            - name: SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          lifecycle:
            postStart:
              exec:
                command: ["/bin/bash", "-c", "./var/lifecycle/postStart.sh"]
            preStop:
              exec:
                command: ["/bin/bash", "-c", "./var/lifecycle/preStop.sh"]
          startupProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - >
                  curl -sv http://localhost:9644/v1/cluster/health_overview |
                  awk '{
                    id = $0; gsub(/.*"controller_id": /, "", id); gsub(/,.*/, "", id)
                    nd_str = $0; gsub(/.*"nodes_down": \[/, "", nd_str); gsub(/\].*/, "", nd_str)
                    FS=","
                    split(nd_str, nd_list)
                    for (i in nd_list) nodes_down[nd_list[i]]=""
                    exit (id in nodes_down)
                  }'
            initialDelaySeconds: 1
            failureThreshold: 120
            periodSeconds: 10
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - >
                  curl -sv http://localhost:9644/v1/cluster/health_overview
            initialDelaySeconds: 10
            failureThreshold: 3
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - >
                  curl -sv http://localhost:9644/v1/cluster/health_overview |
                  awk '{
                    id = $0; gsub(/.*"controller_id": /, "", id); gsub(/,.*/, "", id)
                    nd_str = $0; gsub(/.*"nodes_down": \[/, "", nd_str); gsub(/\].*/, "", nd_str)
                    FS=","
                    split(nd_str, nd_list)
                    for (i in nd_list) nodes_down[nd_list[i]]=""
                    exit (id in nodes_down)
                  }'
            initialDelaySeconds: 1
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
          command:
            - bash
            - -c
            - |
              rpk redpanda start \
                --smp=1 \
                --memory=2048M \
                --reserve-memory=205M \
                --default-log-level=info \
                --advertise-rpc-addr=$(SERVICE_NAME).redpanda.redpanda.svc.cluster.local.:33145 |
              sed 's@RP_BOOTSTRAP_USER[^ ]\+@<censored>@g'
          ports:
            - name: admin
              containerPort: 9644
            - name: http
              containerPort: 8082
            - name: http-default
              containerPort: 8083
            - name: kafka
              containerPort: 9093
            - name: kafka-default
              containerPort: 9094
            - name: rpc
              containerPort: 33145
            - name: schemaregistry
              containerPort: 8081
            - name: schema-default
              containerPort: 8084
          securityContext: 
            runAsUser: 101
            runAsGroup: 101
          volumeMounts:
            - name: lifecycle-scripts
              mountPath: /var/lifecycle
            - name: datadir
              mountPath: /var/lib/redpanda/data
            - name: config
              mountPath: /etc/redpanda
          resources:
            limits:
              cpu: 1
              memory: 2.5Gi
      volumes:
        - name: lifecycle-scripts
          secret:
            secretName: redpanda-sts-lifecycle
            defaultMode: 0774
        - name: datadir
          persistentVolumeClaim:
            claimName: datadir
        - name: redpanda
          configMap:
            name: redpanda
        - name: config
          emptyDir: {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels: 
                  app.kubernetes.io/name: redpanda
                  app.kubernetes.io/instance: "redpanda"
                  app.kubernetes.io/component: redpanda-statefulset
      topologySpreadConstraints:
      - labelSelector:
          matchLabels: 
            app.kubernetes.io/name: redpanda
            app.kubernetes.io/instance: "redpanda"
            app.kubernetes.io/component: redpanda-statefulset
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      nodeSelector:
        {}
      tolerations:
        []
  volumeClaimTemplates:
    - metadata:
        name: datadir
        labels:
          app.kubernetes.io/name: redpanda
          app.kubernetes.io/instance: "redpanda"
          app.kubernetes.io/component: redpanda
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: "20Gi"
