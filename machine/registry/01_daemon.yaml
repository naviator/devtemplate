apiVersion: v1
kind: ConfigMap
metadata:
  name: setup-script
data:
  setup.sh: |
    #!/bin/bash

    set -eu

    sed -i 's/127.0.0.1[[:blank:]]*localhost/127.0.0.1 registry localhost/g' /etc/hosts
    if [ -d "/usr/local/share/ca-certificates/" ]; then
      echo "$TRUSTED_CERT" > /usr/local/share/ca-certificates/registry.crt
      update-ca-certificates
      systemctl restart k3s.service
    elif [ -d "/etc/pki/ca-trust/source/anchors/" ]; then
      echo "$TRUSTED_CERT" > /etc/pki/ca-trust/source/anchors/registry.crt
      update-ca-trust
      systemctl restart k3s.service
    else
      echo "Cannot install certificate"
      exit 1
    fi
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-custom-setup
  labels:
    k8s-app: node-custom-setup
spec:
  selector:
    matchLabels:
      k8s-app: node-custom-setup
  template:
    metadata:
      labels:
        k8s-app: node-custom-setup
    spec:
      hostPID: true
      hostNetwork: true
      initContainers:
      - name: init-node
        command: ["nsenter"]
        args: ["--mount=/proc/1/ns/mnt", "--", "sh", "-c", "$(SETUP_SCRIPT)"]
        image: debian
        env:
        - name: TRUSTED_CERT
          valueFrom:
            secretKeyRef:
              name: registry-tls
              key: tls.crt
        - name: SETUP_SCRIPT
          valueFrom:
            configMapKeyRef:
              name: setup-script
              key: setup.sh
        securityContext:
          privileged: true
      containers:
      - name: wait
        image: k8s.gcr.io/pause:3.1
