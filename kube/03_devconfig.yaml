---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dev
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: dev
spec:
  privileged: false  # Don't allow privileged pods!
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  volumes:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dev
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs:     ['use']
  resourceNames:
  - dev
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dev
roleRef:
  kind: Role
  name: dev
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: dev
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: devscripts
data:
  dev_init.sh: |
      apt update;
      apt install openssh-server git -y;
      mkdir -p /run/sshd;
      echo "PermitUserEnvironment=yes" > /etc/ssh/sshd_config.d/user_env_config;
      mkdir -p /root/.ssh;
      cat /var/run/secrets/user-ssh/authorized_keys > /root/.ssh/authorized_keys;
      chmod -R 0600 /root/.ssh;
      echo "Starting SSH server...";
      /usr/sbin/sshd;
      echo "Server started, sleeping..."
      sleep infinity
