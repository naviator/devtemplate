---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: develop
  labels:
    app: develop
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: develop
      naviator.github.io/devtemplate: deployment
  template:
    metadata:
      labels:
        app: develop
        naviator.github.io/devtemplate: deployment
      annotations:
        naviator.github.io/devtemplate-backup-folders: "/data:/workspace"
        naviator.github.io/devtemplate-backup-interval: "10m"
    spec:
      shareProcessNamespace: true
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
      - name: init
        image: ghcr.io/naviator/bastion
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: APP_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: BACKUP_PATH
          value: "storage::backup/$(POD_NAMESPACE)/$(APP_NAME)"
        command:
        - /bin/sh
        - -c
        args:
        - |
          set -eux

          echo $(id -u):$(id -g) > /tmp/.runas;
          
          echo "Construct home..."
          rsync -rlptD --delete --timeout=2 ${BACKUP_PATH}/data/ /data/ || true
          if [ ! "$(ls -A /data)" ]; then
            rsync -rLvh /usr/home/ /data
          fi

          rsync -rlptD --delete --timeout=2 ${BACKUP_PATH}/workspace/ /workspace/ || true

          echo "Init done...";
        volumeMounts:
        - name: data
          subPathExpr: home
          mountPath: /data
        - name: data
          subPathExpr: workspace
          mountPath: /workspace
        - name: user-home
          mountPath: /usr/home
        - name: tmp
          mountPath: /tmp
      containers:
      - name: backup
        image: ghcr.io/naviator/bastion
        env:
        - name: BACKUP_FOLDERS
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['naviator.github.io/devtemplate-backup-folders']
        - name: BACKUP_INTERVAL
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['naviator.github.io/devtemplate-backup-interval']
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: APP_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: BACKUP_PATH
          value: "storage::backup/$(POD_NAMESPACE)/$(APP_NAME)"
        resources:
          requests:
            memory: 20Mi
            cpu: 10m
          limits:
            memory: 100Mi
            cpu: 2000m
        volumeMounts:
        - name: data
          subPathExpr: home
          mountPath: /data
        - name: data
          subPathExpr: workspace
          mountPath: /workspace
        command:
        - /bin/bash
        - -c
        args:
        - |
          IFS=':' read -ra BACKUP_FOLDERS_ARRAY <<< "$BACKUP_FOLDERS"
          while true; do
            sleep ${BACKUP_INTERVAL}
            echo "Backup start $(date)"
            for FOLDER in "${BACKUP_FOLDERS_ARRAY[@]}"; do
              echo "Backup ${FOLDER}"
              rsync -rlptD --delete --mkpath ${FOLDER}/ ${BACKUP_PATH}${FOLDER} || exit 1
            done
            echo "Backup complete $(date)"
          done
      - name: gate
        image: ghcr.io/naviator/bastion
        env:
        - name: HOME
          value: "/root"
        - name: USER
          value: "root"
        - name: TARGET_SHELL
          value: zsh
          env:
        - name: SSH_AUTHORIZED_KEYS
          valueFrom:
            secretKeyRef:
              name: user-ssh
              key: authorized_keys
              optional: false
        ports:
        - name: ssh
          containerPort: 2222
        volumeMounts:
          # sharing /tmp because auth_sock_dir was hardcoded
          # https://github.com/openssh/libopenssh/blob/011c12f6898fba5c6f84c287ed39c16efa006012/ssh/session.c#L179
        - name: tmp
          mountPath: /tmp
        - name: devscripts
          mountPath: /devscripts
        - name: visit-target
          subPath: visit_target.sh
          mountPath: /etc/profile
        - name: data
          subPathExpr: home
          mountPath: /data
        - name: data
          subPathExpr: workspace
          mountPath: /workspace
        resources:
          requests:
            memory: 1Mi
            cpu: 1m
          limits:
            memory: 1Gi
            cpu: 2000m
        securityContext:
          runAsUser: 0
          # TODO reduce privileged to required nsenter capabilites
          privileged: true
        startupProbe:
          tcpSocket:
            port: ssh
          failureThreshold: 30
          periodSeconds: 10
          initialDelaySeconds: 3
      - name: main
        image: ghcr.io/naviator/bastion
        stdin: true
        tty: true
        env:
        - name: APP_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['app']
        command:
        - /bin/sh
        - -c
        args:
        - 
          sh /devscripts/provision_machine.sh &&
          sh /devscripts/provision_user.sh &&
          sh /devscripts/entrypoint.sh
        securityContext:
          runAsUser: 0
          privileged: true
        startupProbe:
          exec:
            command:
            - cat
            - /tmp/.started
          failureThreshold: 30
          periodSeconds: 10
        volumeMounts:
        - name: data
          subPathExpr: home
          mountPath: /data
        - name: data
          subPathExpr: workspace
          mountPath: /workspace
        - name: tmp
          mountPath: /tmp
        - name: devscripts
          mountPath: /devscripts
        resources:
          requests:
            cpu: 1m
            memory: 10Mi
          limits:
            cpu: 6000m
            memory: 8Gi
      serviceAccountName: dev
      terminationGracePeriodSeconds: 1
      volumes:
      - name: devscripts
        configMap:
          name: devscripts
          defaultMode: 0755
      - name:  visit-target
        configMap:
          name: visit-target
          defaultMode: 0755
      - name: data
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: user-home
        configMap:
          name: user-home
          defaultMode: 0600
